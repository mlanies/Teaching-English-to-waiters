import { getUserStats } from '../services/userService.js';

export async function handleDetailedStatsCommand(user, session, env) {
  try {
    const stats = await getUserStats(env.DB, user.id);
    
    let message = `üìä <b>–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${user.first_name}</b>\n\n`;
    
    // –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    message += `üë§ <b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n`;
    message += `‚Ä¢ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.id}\n`;
    message += `‚Ä¢ Telegram ID: ${user.telegram_id}\n`;
    message += `‚Ä¢ –ò–º—è: ${user.first_name}\n`;
    message += `‚Ä¢ –§–∞–º–∏–ª–∏—è: ${user.last_name || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n`;
    message += `‚Ä¢ Username: @${user.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
    message += `‚Ä¢ –Ø–∑—ã–∫: ${user.language_code}\n\n`;
    
    // –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è
    message += `üìö <b>–ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è:</b>\n`;
    message += `‚Ä¢ –£—Ä–æ–≤–µ–Ω—å: ${user.level}\n`;
    message += `‚Ä¢ –û–ø—ã—Ç: ${user.experience_points} XP\n`;
    message += `‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Ä–æ–∫–æ–≤: ${user.total_lessons_completed}\n`;
    message += `‚Ä¢ –°–µ—Ä–∏—è –¥–Ω–µ–π: ${user.streak_days}\n\n`;
    
    // –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Ä–æ–∫–æ–≤
    if (stats.progress) {
      message += `üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Ä–æ–∫–æ–≤:</b>\n`;
      message += `‚Ä¢ –í—Å–µ–≥–æ —É—Ä–æ–∫–æ–≤: ${stats.progress.total_lessons || 0}\n`;
      message += `‚Ä¢ –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: ${stats.progress.average_score ? Math.round(stats.progress.average_score) : 0}%\n`;
      message += `‚Ä¢ –û–±—â–µ–µ –≤—Ä–µ–º—è: ${Math.round((stats.progress.total_time || 0) / 60)} –º–∏–Ω\n`;
      message += `‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞ —É—Ä–æ–∫: ${stats.progress.total_lessons > 0 ? Math.round((stats.progress.total_time || 0) / stats.progress.total_lessons / 60) : 0} –º–∏–Ω\n\n`;
    }
    
    // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    if (stats.achievements) {
      message += `üèÜ <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b>\n`;
      message += `‚Ä¢ –ü–æ–ª—É—á–µ–Ω–æ: ${stats.achievements.total_achievements || 0}\n`;
      message += `‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å: ${Math.round(((stats.achievements.total_achievements || 0) / 16) * 100)}% (16 –≤—Å–µ–≥–æ)\n\n`;
    }
    
    // –î–∞—Ç—ã
    message += `üìÖ <b>–î–∞—Ç—ã:</b>\n`;
    message += `‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${new Date(user.created_at).toLocaleDateString('ru-RU')} ${new Date(user.created_at).toLocaleTimeString('ru-RU')}\n`;
    message += `‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${new Date(user.last_activity).toLocaleDateString('ru-RU')} ${new Date(user.last_activity).toLocaleTimeString('ru-RU')}\n`;
    message += `‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è: ${new Date(user.updated_at).toLocaleDateString('ru-RU')} ${new Date(user.updated_at).toLocaleTimeString('ru-RU')}\n\n`;
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    message += `üí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>\n`;
    if (user.total_lessons_completed === 0) {
      message += `‚Ä¢ –ù–∞—á–Ω–∏—Ç–µ —Å –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–∫–∞!\n`;
    } else if (user.total_lessons_completed < 5) {
      message += `‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –æ–±—É—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π\n`;
    } else if (user.total_lessons_completed < 20) {
      message += `‚Ä¢ –û—Ç–ª–∏—á–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ —É—Ä–æ–∫–∏\n`;
    } else {
      message += `‚Ä¢ –í—ã –æ–ø—ã—Ç–Ω—ã–π —É—á–µ–Ω–∏–∫! –ü–æ–º–æ–≥–∏—Ç–µ –¥—Ä—É–≥–∏–º\n`;
    }
    
    if (user.streak_days < 3) {
      message += `‚Ä¢ –ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–µ—Ä–∏–∏\n`;
    }

    return {
      message: message,
      keyboard: {
        inline_keyboard: [
          [
            { text: 'üìä –ü—Ä–æ—Ñ–∏–ª—å', callback_data: 'profile' },
            { text: 'üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è', callback_data: 'achievements' }
          ],
          [
            { text: 'üìö –ù–∞—á–∞—Ç—å —É—Ä–æ–∫', callback_data: 'start_lesson' },
            { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }
          ]
        ]
      },
      newSession: { ...session, state: 'detailed_stats' }
    };

  } catch (error) {
    console.error('Error in handleDetailedStatsCommand:', error);
    return {
      message: `üìä <b>–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${user.first_name}</b>\n\n` +
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.\n\n` +
        `üë§ <b>–ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n` +
        `‚Ä¢ –£—Ä–æ–≤–µ–Ω—å: ${user.level}\n` +
        `‚Ä¢ –û–ø—ã—Ç: ${user.experience_points} XP\n` +
        `‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Ä–æ–∫–æ–≤: ${user.total_lessons_completed}\n` +
        `‚Ä¢ –°–µ—Ä–∏—è –¥–Ω–µ–π: ${user.streak_days}\n\n` +
        `üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`,
      keyboard: {
        inline_keyboard: [
          [
            { text: 'üìä –ü—Ä–æ—Ñ–∏–ª—å', callback_data: 'profile' },
            { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }
          ]
        ]
      },
      newSession: session
    };
  }
}
