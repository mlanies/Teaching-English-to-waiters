import { getUserStats } from '../services/userService.js';

export async function handleProfileCommand(user, session, env) {
  try {
    const stats = await getUserStats(env.DB, user.id);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (!stats.user) {
      return {
        message: `üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å: ${user.first_name}</b>\n\n` +
          `üìä <b>–ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n` +
          `‚Ä¢ –£—Ä–æ–≤–µ–Ω—å: ${user.level}\n` +
          `‚Ä¢ –û–ø—ã—Ç: ${user.experience_points} XP\n` +
          `‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Ä–æ–∫–æ–≤: ${user.total_lessons_completed}\n` +
          `‚Ä¢ –°–µ—Ä–∏—è –¥–Ω–µ–π: ${user.streak_days}\n\n` +
          `üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${new Date(user.created_at).toLocaleDateString('ru-RU')}\n` +
          `üïê –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${new Date(user.last_activity).toLocaleDateString('ru-RU')}\n\n` +
          `üí° <i>–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</i>`,
        keyboard: {
          inline_keyboard: [
            [
              { text: 'üìà –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'detailed_stats' },
              { text: 'üéØ –¶–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è', callback_data: 'learning_goals' }
            ],
            [
              { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }
            ]
          ]
        },
        newSession: { ...session, state: 'profile' }
      };
    }
    
    const message = `üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å: ${user.first_name}</b>\n\n` +
      `üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n` +
      `‚Ä¢ –£—Ä–æ–≤–µ–Ω—å: ${user.level}\n` +
      `‚Ä¢ –û–ø—ã—Ç: ${user.experience_points} XP\n` +
      `‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Ä–æ–∫–æ–≤: ${user.total_lessons_completed}\n` +
      `‚Ä¢ –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: ${stats.progress.average_score ? Math.round(stats.progress.average_score) : 0}%\n` +
      `‚Ä¢ –û–±—â–µ–µ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è: ${Math.round((stats.progress.total_time || 0) / 60)} –º–∏–Ω\n` +
      `‚Ä¢ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–π: ${stats.achievements.total_achievements}\n` +
      `‚Ä¢ –°–µ—Ä–∏—è –¥–Ω–µ–π: ${user.streak_days}\n\n` +
      `üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${new Date(user.created_at).toLocaleDateString('ru-RU')}\n` +
      `üïê –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${new Date(user.last_activity).toLocaleDateString('ru-RU')}`;

    return {
      message: message,
      keyboard: {
        inline_keyboard: [
          [
            { text: 'üìà –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'detailed_stats' },
            { text: 'üéØ –¶–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è', callback_data: 'learning_goals' }
          ],
          [
            { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }
          ]
        ]
      },
      newSession: { ...session, state: 'profile' }
    };
  } catch (error) {
    console.error('Error in handleProfileCommand:', error);
    return {
      message: `üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å: ${user.first_name}</b>\n\n` +
        `üìä <b>–ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n` +
        `‚Ä¢ –£—Ä–æ–≤–µ–Ω—å: ${user.level}\n` +
        `‚Ä¢ –û–ø—ã—Ç: ${user.experience_points} XP\n` +
        `‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Ä–æ–∫–æ–≤: ${user.total_lessons_completed}\n` +
        `‚Ä¢ –°–µ—Ä–∏—è –¥–Ω–µ–π: ${user.streak_days}\n\n` +
        `üí° <i>–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</i>`,
      keyboard: {
        inline_keyboard: [
          [
            { text: 'üìà –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'detailed_stats' },
            { text: 'üéØ –¶–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è', callback_data: 'learning_goals' }
          ],
          [
            { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }
          ]
        ]
      },
      newSession: session
    };
  }
}
